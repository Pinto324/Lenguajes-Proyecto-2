/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica;

import Analizador.AnalizadorLexico;
import Analizador.AnalizadorSintactico;
import Analizador.ReportesSintacticos;
import Utilidades.Atajos;
import Utilidades.ManejadorDeArchivos;
import Utilidades.ManejadorDeTexto;
import Utilidades.Numerador;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.concurrent.ConcurrentHashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Action;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.text.DefaultEditorKit;
import javax.swing.undo.UndoManager;

/**
 *
 * @author branp
 */
public class MenuInicial extends javax.swing.JFrame {
    private String archivoALeer;
    public static File Archivo;
    //Variables para archivos:
    private FileInputStream entrada;
    private FileOutputStream salida;
    private JFileChooser seleccion = new JFileChooser();
    private File archivo;
    private UndoManager undoManager = new UndoManager();
    private ConcurrentHashMap<Integer, ManejadorDeTexto> EstadoPrevio;
    private ConcurrentHashMap<Integer, ManejadorDeTexto> EstadoActual;
    public String texto="";
    private final AnalizadorLexico AnalizadorLexico = new AnalizadorLexico();
    private final AnalizadorSintactico AnalizadorSintactico = new AnalizadorSintactico();
    private final ReportesSintacticos ReportesSintacticos = new ReportesSintacticos();
    private Action[] actions = { null, null, new DefaultEditorKit.CopyAction(), new DefaultEditorKit.PasteAction() };
    private boolean Llave = true;
    private ManejadorDeArchivos MA;
    /**
     * Creates new form MenuInicial
     */
    Numerador ControlDeLinea;
    public MenuInicial() {
        initComponents();
        //Para ponerlo en el centro y que el usuario no lo pueda hacer grande o pequeño
         this.setLocationRelativeTo(null);
         this.setResizable(false);
         
        ControlDeLinea = new Numerador(AreaDeTexto);
        ScrollPanelTexto.setRowHeaderView(ControlDeLinea);
        EstadoPrevio = new ConcurrentHashMap<>();
        EstadoActual = new ConcurrentHashMap<>();
        ScrollPanelTexto.setRowHeaderView(ControlDeLinea);
        Atajos.addUndoFunctionality(AreaDeTexto);
         // Crea un UndoManager y asócialo al Document del JTextArea
        AreaDeTexto.getDocument().addUndoableEditListener(undoManager);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        ScrollPanelTexto = new javax.swing.JScrollPane();
        AreaDeTexto = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        BtnAnalizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        AreaDeErrores = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuArchivo = new javax.swing.JMenu();
        MenuAbrir = new javax.swing.JMenuItem();
        MenuGuardar = new javax.swing.JMenuItem();
        MenuGuardarComo = new javax.swing.JMenuItem();
        MenuSalir = new javax.swing.JMenuItem();
        MenuGenerar = new javax.swing.JMenu();
        MenuSimbolos = new javax.swing.JMenuItem();
        RTablaLexico = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        TablaSintacticoBloqueMenu = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        CantidadDeFuncionesMenu = new javax.swing.JMenuItem();
        CantidadDeLlamadasMenu = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        ParametrosMenu = new javax.swing.JMenuItem();
        MenuEdicion = new javax.swing.JMenu();
        MenuCopiar = new javax.swing.JMenuItem();
        MenuPegar = new javax.swing.JMenuItem();
        MenuRehacer = new javax.swing.JMenuItem();
        MenuDeshacer = new javax.swing.JMenuItem();
        MenuAcercaDe = new javax.swing.JMenu();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(102, 102, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Errores encontrados:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(226, 226, 226)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(122, 122, 122))
        );

        AreaDeTexto.setColumns(20);
        AreaDeTexto.setRows(5);
        ScrollPanelTexto.setViewportView(AreaDeTexto);

        jPanel4.setBackground(new java.awt.Color(102, 102, 255));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Escriba el texto a analizar:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(184, 184, 184))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(ScrollPanelTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ScrollPanelTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        BtnAnalizar.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        BtnAnalizar.setText("Analizar");
        BtnAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAnalizarActionPerformed(evt);
            }
        });

        AreaDeErrores.setColumns(20);
        AreaDeErrores.setRows(5);
        AreaDeErrores.setFocusable(false);
        jScrollPane2.setViewportView(AreaDeErrores);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(BtnAnalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnAnalizar)
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 712, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        MenuArchivo.setText("Archivo");
        MenuArchivo.setActionCommand("Opciones");
        MenuArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuArchivoActionPerformed(evt);
            }
        });

        MenuAbrir.setText("Abrir");
        MenuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAbrirActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuAbrir);

        MenuGuardar.setText("Guardar");
        MenuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuGuardarActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuGuardar);

        MenuGuardarComo.setText("Guardar Como");
        MenuArchivo.add(MenuGuardarComo);

        MenuSalir.setText("Salir");
        MenuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuSalirActionPerformed(evt);
            }
        });
        MenuArchivo.add(MenuSalir);

        jMenuBar1.add(MenuArchivo);

        MenuGenerar.setText("Reportes");

        MenuSimbolos.setText("Errores Lexicos");
        MenuSimbolos.setEnabled(false);
        MenuSimbolos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuSimbolosActionPerformed(evt);
            }
        });
        MenuGenerar.add(MenuSimbolos);

        RTablaLexico.setText("Tabla Lexico");
        RTablaLexico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RTablaLexicoActionPerformed(evt);
            }
        });
        MenuGenerar.add(RTablaLexico);

        jMenuItem2.setText("Tabla Sintactico global");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        MenuGenerar.add(jMenuItem2);

        TablaSintacticoBloqueMenu.setText("Tabla Sintactico Bloque");
        TablaSintacticoBloqueMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TablaSintacticoBloqueMenuActionPerformed(evt);
            }
        });
        MenuGenerar.add(TablaSintacticoBloqueMenu);

        jMenuItem4.setText("Instrucciones por bloque");
        MenuGenerar.add(jMenuItem4);

        CantidadDeFuncionesMenu.setText("Cantidad De Funciones");
        CantidadDeFuncionesMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CantidadDeFuncionesMenuActionPerformed(evt);
            }
        });
        MenuGenerar.add(CantidadDeFuncionesMenu);

        CantidadDeLlamadasMenu.setText("Cantidad De Llamadas");
        CantidadDeLlamadasMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CantidadDeLlamadasMenuActionPerformed(evt);
            }
        });
        MenuGenerar.add(CantidadDeLlamadasMenu);

        jMenuItem7.setText("Errores Sintacticos");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        MenuGenerar.add(jMenuItem7);

        ParametrosMenu.setText("Parametros");
        ParametrosMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParametrosMenuActionPerformed(evt);
            }
        });
        MenuGenerar.add(ParametrosMenu);

        jMenuBar1.add(MenuGenerar);

        MenuEdicion.setText("Edicion");

        MenuCopiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuCopiar.setText("Copiar");
        MenuCopiar.setToolTipText("");
        MenuCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCopiarActionPerformed(evt);
            }
        });
        MenuEdicion.add(MenuCopiar);

        MenuPegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuPegar.setText("Pegar");
        MenuPegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuPegarActionPerformed(evt);
            }
        });
        MenuEdicion.add(MenuPegar);

        MenuRehacer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuRehacer.setText("DesHacer");
        MenuRehacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuRehacerActionPerformed(evt);
            }
        });
        MenuEdicion.add(MenuRehacer);

        MenuDeshacer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuDeshacer.setText("Rehacer");
        MenuDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuDeshacerActionPerformed(evt);
            }
        });
        MenuEdicion.add(MenuDeshacer);

        jMenuBar1.add(MenuEdicion);

        MenuAcercaDe.setText("Acerca De");
        MenuAcercaDe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuAcercaDeMouseClicked(evt);
            }
        });
        MenuAcercaDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAcercaDeActionPerformed(evt);
            }
        });
        jMenuBar1.add(MenuAcercaDe);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuArchivoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_MenuArchivoActionPerformed

    private void MenuAcercaDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAcercaDeActionPerformed

    }//GEN-LAST:event_MenuAcercaDeActionPerformed

    private void MenuAcercaDeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAcercaDeMouseClicked
        JOptionPane.showMessageDialog(null, "Creador del programa: Brandon Josué Pinto Méndez \n Carne: 201930236");
    }//GEN-LAST:event_MenuAcercaDeMouseClicked

    private void MenuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAbrirActionPerformed
                // el usuario podra abrir su carpeta y seleccionar el archivo que desee analizar
        if (seleccion.showDialog(null, "Abrir") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccion.getSelectedFile();
            //can.Read = nos indica si el archivo se puede leer
            if (archivo.canRead()) {
                //endsWith (sufijo) se usa para verificar si la cadena
                //termina con la subcadena especificada por el usuario o no
                if (archivo.getName().endsWith("py")) {
                    String documento = abrirArchivo(archivo);
                    AreaDeTexto.setText(documento);
                } else {
                    JOptionPane.showMessageDialog(null, "El archivo no es compatible");
                }
            }
        }
    }//GEN-LAST:event_MenuAbrirActionPerformed

    private void MenuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuGuardarActionPerformed
        guardarTextoEnArchivo(AreaDeTexto);
    }//GEN-LAST:event_MenuGuardarActionPerformed

    private void MenuPegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuPegarActionPerformed
        String Nuevo = AreaDeTexto.getText();
        Nuevo += obtenerTextoDesdePortapapeles();
        AreaDeTexto.setText(Nuevo);
    }//GEN-LAST:event_MenuPegarActionPerformed

    private void MenuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuSalirActionPerformed
        dispose();
    }//GEN-LAST:event_MenuSalirActionPerformed

    private void MenuSimbolosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuSimbolosActionPerformed
        TablasGenerales Tabla = new TablasGenerales(this,false,3);
        Tabla.setVisible(true);
    }//GEN-LAST:event_MenuSimbolosActionPerformed

    private void BtnAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAnalizarActionPerformed
        if(AreaDeTexto.getText().isEmpty()!=true){
            String Cadena = " ";
            AreaDeErrores.setText("");
            AnalizadorLexico.resetVariable();
            AnalizadorLexico.analisisLexico(AreaDeTexto.getText());
            AnalizadorSintactico.ResetBloques();
            AnalizadorSintactico.bloques();
            AreaDeErrores.setText("");
            if(!(AnalizadorLexico.getErroresRecopilado().isEmpty())){
                //Mostramos ventana de reportes
                Cadena += "Se han encontrado errores Léxicos en el aŕea de texto. Da click en el boton de reporte de errores para más informacion";
            } else {      
                Cadena +="No hay errores uwuXDXD";
            }
            if(!(ReportesSintacticos.getErrorRecopilado().isEmpty())){
                //Mostramos ventana de reportes
                Cadena += "\nSe han encontrado errores Sintacticos en el aŕea de texto. Da click en el boton de reporte de errores para más informacion";
            } else {      
                Cadena +="\nNo hay errores Sintacticos uwuXDXD";
            }
            AreaDeErrores.setText(Cadena);
            MenuSimbolos.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this,"No hay texto dentro del area para poder realizar un analisis Léxico", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BtnAnalizarActionPerformed

    private void RTablaLexicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RTablaLexicoActionPerformed
        TablasGenerales Tabla = new TablasGenerales(this,false,1);
        Tabla.setVisible(true);
    }//GEN-LAST:event_RTablaLexicoActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        TablasGenerales Tabla = new TablasGenerales(this,false,2);
        Tabla.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        TablasGenerales Tabla = new TablasGenerales(this,false,4);
        Tabla.setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void CantidadDeFuncionesMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CantidadDeFuncionesMenuActionPerformed
        TablasGenerales Tabla = new TablasGenerales(this,false,5);
        Tabla.setVisible(true);
    }//GEN-LAST:event_CantidadDeFuncionesMenuActionPerformed

    private void CantidadDeLlamadasMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CantidadDeLlamadasMenuActionPerformed
        TablasGenerales Tabla = new TablasGenerales(this,false,6);
        Tabla.setVisible(true);
    }//GEN-LAST:event_CantidadDeLlamadasMenuActionPerformed

    private void TablaSintacticoBloqueMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TablaSintacticoBloqueMenuActionPerformed
        TablasPorBloque Tabla = new TablasPorBloque(this,false,1);
        Tabla.setVisible(true);
    }//GEN-LAST:event_TablaSintacticoBloqueMenuActionPerformed

    private void ParametrosMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParametrosMenuActionPerformed
        TablasGenerales Tabla = new TablasGenerales(this,false,7);
        Tabla.setVisible(true);
    }//GEN-LAST:event_ParametrosMenuActionPerformed

    private void MenuCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCopiarActionPerformed
        copiarTextoAlPortapapeles(AreaDeTexto.getText());
    }//GEN-LAST:event_MenuCopiarActionPerformed

    private void MenuRehacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuRehacerActionPerformed
        if (undoManager.canUndo()) {
                    undoManager.undo();
                }
    }//GEN-LAST:event_MenuRehacerActionPerformed

    private void MenuDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuDeshacerActionPerformed
         if (undoManager.canRedo()) {
                    undoManager.redo();
                }
    }//GEN-LAST:event_MenuDeshacerActionPerformed

    //Metodos:
   
    public void escritorArchivo(File archivo, String texto){
        FileOutputStream salida;
        try {
            salida = new FileOutputStream(archivo);
        byte [] bytxt = texto.getBytes();
            salida.write(bytxt);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error al Guardar El Archivo");
        }
    }

    
    public JTextArea getAreaDeTexto() {
        return AreaDeTexto;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaDeErrores;
    private javax.swing.JTextArea AreaDeTexto;
    private javax.swing.JButton BtnAnalizar;
    private javax.swing.JMenuItem CantidadDeFuncionesMenu;
    private javax.swing.JMenuItem CantidadDeLlamadasMenu;
    private javax.swing.JMenuItem MenuAbrir;
    private javax.swing.JMenu MenuAcercaDe;
    private javax.swing.JMenu MenuArchivo;
    private javax.swing.JMenuItem MenuCopiar;
    private javax.swing.JMenuItem MenuDeshacer;
    private javax.swing.JMenu MenuEdicion;
    private javax.swing.JMenu MenuGenerar;
    private javax.swing.JMenuItem MenuGuardar;
    private javax.swing.JMenuItem MenuGuardarComo;
    private javax.swing.JMenuItem MenuPegar;
    private javax.swing.JMenuItem MenuRehacer;
    private javax.swing.JMenuItem MenuSalir;
    private javax.swing.JMenuItem MenuSimbolos;
    private javax.swing.JMenuItem ParametrosMenu;
    private javax.swing.JMenuItem RTablaLexico;
    private javax.swing.JScrollPane ScrollPanelTexto;
    private javax.swing.JMenuItem TablaSintacticoBloqueMenu;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
//Manejador de Archivo:
        public String abrirArchivo(File archivo){
        
        String documento = "";
        try{
            entrada = new FileInputStream(archivo);
            int ascii;
            while((ascii = entrada.read())!= -1){
                char caracter = (char) ascii;
                documento += caracter;
            }
        }catch(Exception e){
            }
        return documento;
    }
    
    // Creación de método para poder guardar el archivo como...
    
     public static void guardarTextoEnArchivo(JTextArea textArea) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar Archivo");

        int userSelection = fileChooser.showSaveDialog(null);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();

            try (PrintWriter writer = new PrintWriter(fileToSave)) {
                writer.print(textArea.getText());
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error al guardar el archivo.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    public static void copiarTextoAlPortapapeles(String texto) {
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        StringSelection selection = new StringSelection(texto);
        clipboard.setContents(selection, null);
        JOptionPane.showMessageDialog(null, "Texto copiado al portapapeles.", "Copiado", JOptionPane.INFORMATION_MESSAGE);
    }
    
        public static String obtenerTextoDesdePortapapeles() {
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        Transferable transferable = clipboard.getContents(null);
        if (transferable != null && transferable.isDataFlavorSupported(DataFlavor.stringFlavor)) {
            try {
                return (String) transferable.getTransferData(DataFlavor.stringFlavor);
            } catch (UnsupportedFlavorException | IOException e) {
                e.printStackTrace();
            }
        }
        return null;
    }

}
